lower <- mean - qt(0.95, df) * s / sqrt(n)
upper <- mean + qt(0.95, df) * s / sqrt(n)
c(lower, upper)
?binom.test
x = 3
n = 4
p = 0.5
binom.test(x, n, p, alternative="greater", conf.level = 0.95)
ppois(9, 1/100, lower.tail=F)*100
?ppois
ppois(10/1878, 1/100, lower.tail=T)*100
ppois(10/1878, 1/100, lower.tail=T)
ppois(10/1787, 1/100, lower.tail=T)
?t.tesy
?t.test
n1 = 9 # treated
n2 = 9 # placebo
m1 = -3 # treated
m2 = 1 # placebo
var1 = 1.5^2 # treated
var2 = 1.8^2 # placebo
interval <- function (n1, n2, m1, m2, var1, var2) {
difference = m1 - m2
MSE = (var1 + var2)/2 # (Mean Squared Error)
std_error = sqrt((2 * MSE)/n1)
df = (n1 - 1) + (n2 - 1)
t_95_df = qt(0.975, df) # http://onlinestatbook.com/2/calculators/inverse_t_dist.html
lower = difference - t_95_df * std_error
upper = difference + t_95_df * std_error
c(lower, upper)
}
interval(n1, n2, m1, m2, var1, var2)
?pt
?power.t.test
n = 100
d = 0.01
sd = 0.04
power.t.test(n, d, sd, sig.level=0.05, type="one.sided")
n = 100
d = 0.01
sd = 0.04
power.t.test(n, d, sd, sig.level=0.05, type="one.sample",
alt="one.sided")$power
d = 0.01
sd = 0.04
power.t.test(power = 0.9, d, sd, sig.level=0.05, type="one.sample",
alt="one.sided")$n
d = 0.01
sd = 0.04
power.t.test(power = 0.9, d, sd, type="one.sample",
alt="one.sided")$n
d = 0.01
sd = 0.04
power.t.test(power = 0.9, delta = d, sd=sd, type="one.sample",
alt="one.sided")$n
setwd("~/Documents/Data Analysis/R/Coursera/Caffo_B_DataProducts/Shiny/GHG")
setwd("~/Documents/Data Analysis/R/Coursera/Caffo_B_DataProducts/Shiny/GHG")
runApp()
library(shiny)
library(maps)
?maps
map('county', 'iowa', fill = TRUE, col = palette())
?map
map("state", "usa")
map("state", "usa", fill = TRUE)
map("usa", fill = TRUE)
map("usa", fill = TRUE, col = palette())
map("state", fill = TRUE, col = palette())
GHG.by.state <- read.table("./data/GHG.by.state.txt", sep="\t")
g11 <- subset(GHG.by.state, GHG.by.state$Year == "2011")
map("state", fill = TRUE, col = palette())
?state.fips
data(state.fips)
View(state.fips)
library(ggplot2)
all_states <- map_data("state")
head(all_states)
runApp()
runApp()
GHG.by.state <- read.table("./data/GHG.by.state.txt", sep="\t")
head(GHG.by.state)
g11 <- susbet(GHG.by.state, GHG.by.state$Year == "2011")
g11 <- subset(GHG.by.state, GHG.by.state$Year == "2011")
head(g11)
runApp()
library(datasets)
a <- data(WorldPhones)
View(a)
a <- load(WorldPhones)
a <- data(WorldPhones)
a
?datasets
WorldPhones
a <- (WorldPhones)
a
y <- 2011
paste("GHG",y)
paste("GHG"+y)
"GHG"+y
paste("GHG",y, sep="")
paste("GHG", y, sep="")
GHG2011 <- read.csv("./data/2011.csv")
states <- read.csv("./data/states.csv")
states$Region <- as.factor(states$Region)
library(plyr)
GHG2011 <- join(GHG2011, states, by="STATE_ABBR")
head(GHG2011)
data.state <- function(mainData, yyyy) {
data.state <- as.data.frame.table(tapply(mainData$EMISSIONS, mainData$STATE_ABBR, sum))
colnames(data.state) <- c("State", paste("GHG", yyyy, sep=""))
data.state$paste("percGHG", yyyy, sep="") <- data.state$paste("GHG", yyyy, sep="") / sum(data.state$paste("GHG", yyyy, sep="")) * 100
data.state
}
data.state(GHG2011, 2011)
paste("GHG", y, sep="")
str(paste("GHG", y, sep=""))
GHG2011 <- read.csv("./data/2011.csv")
GHG2008 <- read.csv("./data/2008.csv")
# Add corresponding region for each state (as defined by EPA)
states <- read.csv("./data/states.csv")
states$Region <- as.factor(states$Region)
library(plyr)
GHG2011 <- join(GHG2011, states, by="STATE_ABBR")
GHG2008 <- join(GHG2008, states, by="STATE_ABBR")
data.state <- as.data.frame.table(tapply(GHG2011$EMISSIONS, GHG2011$STATE_ABBR, sum))
colnames(data.state) <- c("State", "GHG2011")
data.state$percGHG2011 <- data.state$percGHG2011 / sum(data.state$percGHG2011) * 100
#load the data
GHG2011 <- read.csv("./data/2011.csv")
GHG2008 <- read.csv("./data/2008.csv")
# Add corresponding region for each state (as defined by EPA)
states <- read.csv("./data/states.csv")
states$Region <- as.factor(states$Region)
library(plyr)
GHG2011 <- join(GHG2011, states, by="STATE_ABBR")
GHG2008 <- join(GHG2008, states, by="STATE_ABBR")
data.state <- as.data.frame.table(tapply(GHG2011$EMISSIONS, GHG2011$STATE_ABBR, sum))
colnames(data.state) <- c("State", "GHG2011")
data.state$percGHG2011 <- data.state$GHG2011 / sum(data.state$GHG2011) * 100
head(data.state)
data.state2 <- as.data.frame.table(tapply(GHG2008$EMISSIONS, GHG2008$STATE_ABBR, sum))
colnames(data.state2) <- c("State", "GHG2008")
data.state2$percGHG2008 <- data.state2$GHG2008 / sum(data.state2$GHG2008) * 100
head(data.state2)
GHG.by.state <- cbind(data.state, data.state2)
head(GHGby.state)
head(GHG.by.state)
library(plyr)
#load the data
GHG2011 <- read.csv("./data/2011.csv")
GHG2008 <- read.csv("./data/2008.csv")
# Add corresponding region for each state (as defined by EPA)
states <- read.csv("./data/states.csv")
states$Region <- as.factor(states$Region)
library(plyr)
GHG2011 <- join(GHG2011, states, by="STATE_ABBR")
GHG2008 <- join(GHG2008, states, by="STATE_ABBR")
# create a 2011 dataset with total greenhouse gases
# and percent greenhouse gases by state
data.state <- as.data.frame.table(tapply(GHG2011$EMISSIONS, GHG2011$STATE_ABBR, sum))
colnames(data.state) <- c("State", "GHG2011")
data.state$percGHG2011 <- data.state$GHG2011 / sum(data.state$GHG2011) * 100
# create a 2008 dataset with total greenhouse gases
# and percent greenhouse gases by state
data.state2 <- as.data.frame.table(tapply(GHG2008$EMISSIONS, GHG2008$STATE_ABBR, sum))
colnames(data.state2) <- c("State", "GHG2008")
data.state2$percGHG2008 <- data.state2$GHG2008 / sum(data.state2$GHG2008) * 100
GHG.by.state <- join(data.state, data.state2, by="State")
head(GHG.by.state)
View(data.state2)
data.region <- as.data.frame.table(tapply(GHG2011$EMISSIONS, GHG2011$Region, sum))
colnames(data.region) <- c("Region", "GHG2011")
data.region$percGHG2011 <- data.region$GHG2011 / sum(data.region$GHG2011) * 100
head(data.region)
GHG.by.region <- join(data.region, data.region2, by="Region")
#load the data
GHG2011 <- read.csv("./data/2011.csv")
GHG2008 <- read.csv("./data/2008.csv")
# Add corresponding region for each state (as defined by EPA)
states <- read.csv("./data/states.csv")
states$Region <- as.factor(states$Region)
library(plyr)
GHG2011 <- join(GHG2011, states, by="STATE_ABBR")
GHG2008 <- join(GHG2008, states, by="STATE_ABBR")
## BY STATE
# create a 2011 dataset with total greenhouse gases
# and percent greenhouse gases by state
data.state <- as.data.frame.table(tapply(GHG2011$EMISSIONS, GHG2011$STATE_ABBR, sum))
colnames(data.state) <- c("State", "GHG2011")
data.state$percGHG2011 <- data.state$GHG2011 / sum(data.state$GHG2011) * 100
# create a 2008 dataset with total greenhouse gases
# and percent greenhouse gases by state
data.state2 <- as.data.frame.table(tapply(GHG2008$EMISSIONS, GHG2008$STATE_ABBR, sum))
colnames(data.state2) <- c("State", "GHG2008")
data.state2$percGHG2008 <- data.state2$GHG2008 / sum(data.state2$GHG2008) * 100
# combine the 2011 and 2008 data
GHG.by.state <- join(data.state, data.state2, by="State")
data.region <- as.data.frame.table(tapply(GHG2011$EMISSIONS, GHG2011$Region, sum))
colnames(data.region) <- c("Region", "GHG2011")
data.region$percGHG2011 <- data.region$GHG2011 / sum(data.region$GHG2011) * 100
# create a 2008 dataset with total greenhouse gases
# and percent greenhouse gases by region
data.region2 <- as.data.frame.table(tapply(GHG2008$EMISSIONS, GHG2008$Region, sum))
colnames(data.region2) <- c("Region", "GHG2008")
data.region2$percGHG2008 <- data.region2$GHG2008 / sum(data.region2$GHG2008) * 100
# combine the 2011 and 2008 data
GHG.by.region <- join(data.region, data.region2, by="Region")
GHG.by.region
write.table(GHG.by.state, "./data/GHG.by.state.txt", sep="\t")
write.table(GHG.by.region, "./data/GHG.by.region.txt", sep="\t")
GHG.by.state <- read.table("./data/GHG.by.state.txt", sep="\t")
GHG.by.state <- read.table("./data/GHG.by.state.txt", sep="\t")
library(ggplot2)
qplot(State, GHG, fill = Year, position="dodge",
data = GHG.by.state, geom="bar", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions for each US State")
qplot(State, GHG2011,
data = GHG.by.state, geom="bar", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions for each US State")
qplot(State, GHG2008,
data = GHG.by.state, geom="bar", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(y = "Greenhouse Gases (Tons") +
labs(title = "Percent Greenhouse Gases Emissions for each US State in 2008")
qplot(Region, GHG2011,
data = GHG.by.region, geom="bar", stat="identity") +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions by Region in 2011 (USA)")
GHG.by.region <- read.table("./data/GHG.by.region.txt", sep="\t")
qplot(Region, GHG2011,
data = GHG.by.region, geom="bar", stat="identity") +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions by Region in 2011 (USA)")
qplot(State, GHG2008,
data = GHG.by.state, geom="bar", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(y = "Greenhouse Gases (Tons)" +
labs(title = "Percent Greenhouse Gases Emissions for each US State in 2008")
)
qplot(State, GHG2008,
data = GHG.by.state, geom="bar", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Percent Greenhouse Gases Emissions for each US State in 2008")
qplot(Region, GHG2011,
data = GHG.by.region, geom="bar", stat="identity") +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions by Region in 2011 (USA)")
qplot(Region, GHG2008,
data = GHG.by.region, geom="bar", stat="identity") +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions by Region in 2008 (USA)")
summary(GHG.by.state)
qplot(State, GHG2011,
data = GHG.by.state, geom="bar", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylim(0, 202520000) +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions for each US State in 2011")
qplot(State, GHG2008,
data = GHG.by.state, geom="bar", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylim(0, 202520000) +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions for each US State in 2008")
summary(GHG.by.region)
qplot(Region, GHG2011,
data = GHG.by.region, geom="bar", stat="identity") +
ylim(0, 526240000) +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions by Region in 2011 (USA)")
qplot(Region, GHG2008,
data = GHG.by.region, geom="bar", stat="identity") +
ylim(0, 526240000) +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions by Region in 2008 (USA)")
class(GHG.by.region$Region)
GHG2011 <- read.csv("./data/2011.csv")
GHG2008 <- read.csv("./data/2008.csv")
# Add corresponding region for each state (as defined by EPA)
states <- read.csv("./data/states.csv")
states$Region <- as.factor(states$Region)
GHG2011 <- join(GHG2011, states, by="STATE_ABBR")
GHG2008 <- join(GHG2008, states, by="STATE_ABBR")
data.state <- as.data.frame.table(tapply(GHG2011$EMISSIONS, GHG2011$STATE_ABBR, sum))
colnames(data.state) <- c("State", "GHG2011")
data.state$percGHG2011 <- data.state$GHG2011 / sum(data.state$GHG2011) * 100
data.state2 <- as.data.frame.table(tapply(GHG2008$EMISSIONS, GHG2008$STATE_ABBR, sum))
colnames(data.state2) <- c("State", "GHG2008")
data.state2$percGHG2008 <- data.state2$GHG2008 / sum(data.state2$GHG2008) * 100
head(data.state)
GHG.by.state <- join(data.state, data.state2, by="State")
class(states$Region)
data.region <- as.data.frame.table(tapply(GHG2011$EMISSIONS, GHG2011$Region, sum))
colnames(data.region) <- c("Region", "GHG2011")
class(data.region$Region)
data.region$percGHG2011 <- data.region$GHG2011 / sum(data.region$GHG2011) * 100
class(data.region$Region)
data.region2 <- as.data.frame.table(tapply(GHG2008$EMISSIONS, GHG2008$Region, sum))
colnames(data.region2) <- c("Region", "GHG2008")
data.region2$percGHG2008 <- data.region2$GHG2008 / sum(data.region2$GHG2008) * 100
class(data.region2$Region)
GHG.by.region <- join(data.region, data.region2, by="Region")
GHG.by.region
class(GHG.by.region$Region)
write.table(GHG.by.state, "./data/GHG.by.state.txt", sep="\t")
write.table(GHG.by.region, "./data/GHG.by.region.txt", sep="\t")
GHG.by.state <- read.table("./data/GHG.by.state.txt", sep="\t")
GHG.by.region <- read.table("./data/GHG.by.region.txt", sep="\t")
class(GHG.by.region$Region)
?read.table
GHG.by.state <- read.csv("./data/GHG.by.state.txt", sep="\t")
class(GHG.by.region$Region)
class(GHG.by.state$Region)
GHG.by.state <- read.table("./data/GHG.by.state.txt", sep="\t")
class(GHG.by.state$Region)
GHG.by.state <- read.table("./data/GHG.by.state.txt", sep="\t")
class(GHG.by.state$Region)
head(GHG.by.state)
GHG.by.region <- read.table("./data/GHG.by.region.txt", sep="\t")
head(GHG.by.region)
class(GHG.by.region$Region)
GHG.by.region <- read.csv("./data/GHG.by.region.txt", sep="\t")
class(GHG.by.region$Region)
GHG.by.region <- read.table("./data/GHG.by.region.txt", sep="\t")
GHG.by.region <- read.table("./data/GHG.by.region.txt", sep="\t")
GHG.by.region$Region <- as.factor(GHG.by.region$Region)
class(GHG.by.region$Region)
qplot(Region, GHG2011,
data = GHG.by.region, geom="bar", stat="identity") +
ylim(0, 526240000) +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions by Region in 2011 (USA)")
qplot(Region, GHG2008,
data = GHG.by.region, geom="bar", stat="identity") +
ylim(0, 526240000) +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions by Region in 2008 (USA)")
runApp()
library(datasets)
WorldPhones
runApp()
runApp()
runApp()
qplot(State, GHG2011,
data = GHG.by.state, geom="bar", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylim(0, 202520000) +
labs(y = "Greenhouse Gases (Tons)") +
labs(title = "Total Greenhouse Gases Emissions for each US State in 2011")
setwd("~/Documents/Data Analysis/R/Coursera/Caffo_B_DataProducts/Shiny/stockVis")
runApp()
data(package = .packages(all.available = TRUE))
library(coin)
data(jobsatisfaction)
(jobsatisfaction)
library(colorspace)
USPersonalExpenditure
USArrests
airquality
co2
discoveries
sleep
delivery
library(robustbase)
delivery
library(UsingR)
age.universe
alltime.movies
diamond
watertemp
library(vcd)
jobsatisfaction
setwd("~/Documents/Data Analysis/R/Coursera/Caffo_B_DataProducts/Shiny/baby_names")
bb <- read.csv("./data/baby-names2.csv")
head(bb)
unique(bb$year)
unique(bb$sex)
boy <- subset(bb, bb$sex == "boy")
girl <- subset(bb, bb$sex =="girl")
View(boy)
mtcars
library(boot)
bigcity
catsM
city
Prestige
library(cars)
library(car)
Prestige
library(car)
data <- Prestige
library(car)
data <- Prestige
data
?kmeans
?Prestige
States
?States
Vocab
head(Vocab)
?Vocab
data <- Vocab
summary(Vocab)
boxplot(education ~ sex, data=data)
boxplot(vocabulary ~ sex, data=data)
summary(lm(vocabulary ~ education, data = data))
library(ElemStatLearn)
data <- spam
head(spam)
?spam
ozone
data <- ozone
sumary(ozone)
summary(ozone)
?ozone
plot(ozone)
plot(log(ozone))
plot(ozone)
plot(ozone)
plot(ozone)
plot(log(ozone))
plot(ozone)
plot(log(ozone))
hist(ozone$ozone)
plot(log(ozone))
par(mfrow=c(2, 2))
hist(ozone$ozone)
hist(ozone$radiation)
hist(ozone$temperature)
hist(ozone$wind)
plot(ozone$temperature, ozone$ozone)
plot(log(ozone$temperature), log(ozone$ozone))
iris
iris)[[2]]
names(iris)[[2]]
head(ozone)
runApp()
setwd("~/Documents/Data Analysis/R/Coursera/Caffo_B_DataProducts/Shiny/Ozone")
runApp()
?plot
?col
runApp()
plot(radiation, ozone)
plot(radiation, ozone, data=ozone)
plot(ozone$radiation, ozone$ozone)
plot(ozone$radiation ~ ozone$ozone)
lines(lm(ozone$radiation ~ ozone$ozone))
lines(lm(ozone$radiation ~ ozone$ozone)$fit)
lines(ozone$ozone, predict(loess_fit), col = "blue")
plot(ozone$radiation ~ ozone$ozone)
# fit a loess line
loess_fit <- loess(ozone$radiation ~ ozone$ozone)
lines(ozone$ozone, predict(loess_fit), col = "blue")
library(ggplot2)
ggplot(ozone, aes(ozone,radiation)) + geom_point() + geom_smooth()
runApp()
runApp()
runApp()
head(ozone)
names(ozone)[[2]]
runApp()
?ozone
runApp()
?rcharts
library(rcharts)
library(rCharts)
require(devtools)
install_github('rCharts', 'ramnathv')
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
library(rCharts)
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
setwd("~/Documents/Data Analysis/R/Coursera/Caffo_B_DataProducts/Shiny/Ozone")
runApp()
setwd("~/Documents/Data Analysis/R/Coursera/Caffo_B_DataProducts/Shiny/Coursera")
runApp()
library(slidify)
library(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
setwd("~/Documents/Data Analysis/R/Coursera/Caffo_B_DataProducts/Slidify")
author("coursera_slidify")
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair,
group = 'Eye',
data = subset(haireye, Sex == 'Male'),
type = 'multiBarChart'
)
n1$print('chart1')
?rCharts
n1
n1$print('chart1')
?nPlot
rCharts
slidify("index.Rmd")
